<?php

  function trimds( $s ) {
    return rtrim( $s, DIRECTORY_SEPARATOR );
  }
  function joinpaths() {
    return implode( DIRECTORY_SEPARATOR, array_map( 'trimds', func_get_args() ) );
  }

  if( ! file_exists( './environment.json' ) ) {
    $env = false;
  } else {
    $env = json_decode( file_get_contents('./environment.json' ) );
  }

  /**
   * The current action command.
   */
  if( isset( $argv[ 1 ] ) ) {
    $thisArg = strtolower( trim( $argv[ 1 ] ) );
  } else {
    $thisArg = '';
  }

  /**
   * Create a new environment.json file.
   */
  if( $thisArg == 'env:new' ) {
    // Check if a env file already exists.
    if( file_exists( './environment.json' ) ) {
      echo "\nenvironment.json already exists, do you want to overwrite?(Y/n) ";
      $handle = fopen( "php://stdin", "r" );
      $cont   = trim( fgets( $handle ) );
      if( strtolower( $cont ) == 'y' ) {
        echo "\nOverwriting environment.json file ...\n\n";
      } else {
        echo "\nAction canceled\n\n";
        exit();
      }
    }
    // Create the new environment.json file.
    $default_env = json_decode( file_get_contents( './inc/environment.json.example' ) );
    $default_env->secret_keys = bin2hex( random_bytes( 64 ) );
    file_put_contents( './environment.json', json_encode( $default_env, JSON_PRETTY_PRINT ) );
    exit( "Environment document has created.\n\n" );
  }

  if( $env === false ) exit("
    WARNING: No environment document was found!
    Run this command 'php zinc env:new' to generate a new env file.

  ");

  if ( strtolower( $env->environment ) !== 'local' ) exit("\nZincPHP CLI can't run when it is not in local environment\n\n" );  if ( strtolower( $env->environment ) !== 'local' ) exit("\nZincPHP CLI can't run when it is not in local environment\n\n" );

  /**
   * Serve as a localserver.
   */
  if( $thisArg == 'serve' ) {
    $_host = '127.0.0.1';   // Default host
    $_port = '8585';        // Default port
    foreach( $argv as $index => $arg ) {
      if( $index > 1 ) {
        if( strtolower( trim( $arg ) ) == '--host' ) $_host = $argv[ $index + 1 ];
        if( strtolower( trim( $arg ) ) == '--port' ) $_port = $argv[ $index + 1 ];
      }
    }
    echo "\n" . 'Server is running at http://' . $_host . ':' . $_port . "\n\n";
    chdir( joinpaths( getcwd(), '/public' ) );
    shell_exec( 'php -S ' . $_host . ':' . $_port );
  }

  /**
   * Generate a new secret token.
   */
  if( $thisArg == 'key:generate' ) {
    $env->secret_keys = bin2hex( random_bytes( 64 ) );
    file_put_contents( './environment.json', json_encode( $env, JSON_PRETTY_PRINT ) );
    echo "\nSecrent key has generated\n\n";
    exit();
  }

  /**
   * Add a new domain to allow CORS
   */
  if( $thisArg == 'cors:add' ) {
    echo "\nAdding a new domain to allowed CORS list.\nType the domain name here (Example: 127.0.0.1:2010 or example.com - no http://)\n> ";
    $handle = fopen( "php://stdin", "r" );
    $domain = trim( fgets( $handle ) );
    if( ! empty( $domain ) ) {
      $env->cors_allowed[] = 'http://' . $domain;
      file_put_contents( './environment.json', json_encode( $env, JSON_PRETTY_PRINT ) );
      echo "\nDomain( " . $domain . " ) was added to allowed CORS list.\n\n";
    } else {
      echo "\nUnable to add a domain to allowed CORS list.\n\n";
    }
    exit();
  }

  /**
   * Zinc command to create a new block.
   */
  if( $thisArg == 'make:block' ) {
    if( ! isset( $argv[ 2 ] ) ) exit( 'No block was created' );
    $blockPath = trim( $argv[ 2 ] );
    if( empty( $blockPath ) )  exit( 'No block was created' );
    $blockName = basename( $blockPath );
    $blockName = rtrim( $blockName, '.php' );
    $blockPath = ltrim( $blockPath, '/' );
    $blockPath = rtrim( $blockPath, $blockName );
    $blockPath = joinpaths( getcwd(), 'blocks', $blockPath );
    if( ! file_exists( $blockPath ) ) {
      mkdir( $blockPath, 0777, true );
    }
    // Check if the block already exists.
    if( file_exists( joinpaths( $blockPath, $blockName . '.php' ) ) ) {
      echo "\n> " . $blockName . '.php block already exists!' . "\n\n";
      exit();
    }
    copy( './inc/core/structures/NewBlock', joinpaths( $blockPath, $blockName . '.php' ) );
    echo "\n> " . $blockName . ' block has created as '. $blockName .'.php' . "\n\n";
    exit();
  }

  /**
   * Default ZincPHP CLI welcome message.
   */
  echo "

    Welcome to ZincPHP!
    GitHub: https://github.com/rakibtg/ZincPHP

    Run 'php zinc help' to learn more :)


  ";